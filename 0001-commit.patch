From 009f8a9d76e31c286d968d965fb604ad1ee576be Mon Sep 17 00:00:00 2001
From: Felipe Modolo <felipe.modolo@lckconsultoria.com.br>
Date: Mon, 14 Apr 2025 15:31:11 -0300
Subject: [PATCH] commit

---
 .../exceptions/GlobalExceptionHandler.java    |  4 +-
 .../UsuarioNaoEncontradoException.java        | 14 ++++++
 .../controllers/TarefaController.java         | 44 ++++++++++++++++
 .../br/com/felipeTarefas/domain/Tarefa.java   | 25 ++++------
 .../br/com/felipeTarefas/domain/Usuario.java  |  3 +-
 .../domain/dtos/TarefaDTOIn.java              | 27 ++++++++++
 .../domain/dtos/TarefaDTOOut.java             | 37 ++++++++++++++
 .../repositories/TarefaRepository.java        |  4 +-
 .../felipeTarefas/service/TarefaService.java  | 50 +++++++++++++++++--
 .../felipeTarefas/service/UsuarioService.java | 10 ++--
 10 files changed, 191 insertions(+), 27 deletions(-)
 create mode 100644 src/main/java/br/com/felipeTarefas/config/exceptions/UsuarioNaoEncontradoException.java
 create mode 100644 src/main/java/br/com/felipeTarefas/controllers/TarefaController.java
 create mode 100644 src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOIn.java
 create mode 100644 src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOOut.java

diff --git a/src/main/java/br/com/felipeTarefas/config/exceptions/GlobalExceptionHandler.java b/src/main/java/br/com/felipeTarefas/config/exceptions/GlobalExceptionHandler.java
index c55f516..608f58a 100644
--- a/src/main/java/br/com/felipeTarefas/config/exceptions/GlobalExceptionHandler.java
+++ b/src/main/java/br/com/felipeTarefas/config/exceptions/GlobalExceptionHandler.java
@@ -8,8 +8,8 @@ import org.springframework.web.bind.annotation.ExceptionHandler;
 @ControllerAdvice
 public class GlobalExceptionHandler {
 
-    @ExceptionHandler(UsuarioNãoEncontradoException.class)
-    public ResponseEntity<String> handleUsuarioNaoEncontrado(UsuarioNãoEncontradoException exception) {
+    @ExceptionHandler(UsuarioNaoEncontradoException.class)
+    public ResponseEntity<String> handleUsuarioNaoEncontrado(UsuarioNaoEncontradoException exception) {
         return ResponseEntity.status(HttpStatus.NOT_FOUND).body(exception.getMessage());
     }
 
diff --git a/src/main/java/br/com/felipeTarefas/config/exceptions/UsuarioNaoEncontradoException.java b/src/main/java/br/com/felipeTarefas/config/exceptions/UsuarioNaoEncontradoException.java
new file mode 100644
index 0000000..0b9b25a
--- /dev/null
+++ b/src/main/java/br/com/felipeTarefas/config/exceptions/UsuarioNaoEncontradoException.java
@@ -0,0 +1,14 @@
+package br.com.felipeTarefas.config.exceptions;
+
+import org.springframework.http.HttpStatus;
+import org.springframework.web.bind.annotation.ResponseStatus;
+
+@ResponseStatus(HttpStatus.NOT_FOUND)
+public class UsuarioNaoEncontradoException extends RuntimeException {
+    
+    public UsuarioNaoEncontradoException(Long id){
+        super("Usuário com o id "+id+" não encontrado");
+    }
+
+
+}
diff --git a/src/main/java/br/com/felipeTarefas/controllers/TarefaController.java b/src/main/java/br/com/felipeTarefas/controllers/TarefaController.java
new file mode 100644
index 0000000..99db89f
--- /dev/null
+++ b/src/main/java/br/com/felipeTarefas/controllers/TarefaController.java
@@ -0,0 +1,44 @@
+package br.com.felipeTarefas.controllers;
+
+import java.util.List;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+import br.com.felipeTarefas.domain.dtos.TarefaDTOIn;
+import br.com.felipeTarefas.domain.dtos.TarefaDTOOut;
+import br.com.felipeTarefas.service.TarefaService;
+import io.swagger.v3.oas.annotations.Operation;
+import io.swagger.v3.oas.annotations.parameters.RequestBody;
+import io.swagger.v3.oas.annotations.responses.ApiResponse;
+import io.swagger.v3.oas.annotations.responses.ApiResponses;
+
+@RestController
+@RequestMapping("/tarefas")
+public class TarefaController {
+
+    @Autowired
+    private TarefaService tarefaService;
+
+
+    @Operation(description = "Lista as tarefas")
+    @ApiResponses(value ={
+        @ApiResponse(responseCode = "200", description = "Tarefas listadas com sucesso")
+    } )
+    
+    @GetMapping
+    public List<TarefaDTOOut> listarTarefas(){
+        return tarefaService.listarTarefas();
+    }
+
+    @PostMapping
+    public ResponseEntity<TarefaDTOOut> criarUsuario(@RequestBody TarefaDTOIn tarefaDTOIn){
+        TarefaDTOOut tarefaCriada = tarefaService.criarTarefa(tarefaDTOIn);
+        return ResponseEntity.status(HttpStatus.ACCEPTED).body(tarefaCriada);
+    }
+}
diff --git a/src/main/java/br/com/felipeTarefas/domain/Tarefa.java b/src/main/java/br/com/felipeTarefas/domain/Tarefa.java
index 6cf7647..20a1d85 100644
--- a/src/main/java/br/com/felipeTarefas/domain/Tarefa.java
+++ b/src/main/java/br/com/felipeTarefas/domain/Tarefa.java
@@ -2,11 +2,10 @@ package br.com.felipeTarefas.domain;
 
 import java.time.LocalDateTime;
 
+import br.com.felipeTarefas.enums.PrioridadeEnum;
 import br.com.felipeTarefas.enums.PrioridadeEnumConverter;
 import br.com.felipeTarefas.enums.StatusEnum;
-import br.com.felipeTarefas.enums.prioridadeEnum;
-import br.com.felipeTarefas.enums.statusEnum;
-import jakarta.persistence.Column;
+import br.com.felipeTarefas.enums.StatusEnumConverter;
 import jakarta.persistence.Convert;
 import jakarta.persistence.Entity;
 import jakarta.persistence.FetchType;
@@ -27,26 +26,22 @@ public class Tarefa {
 
     @Id
     @GeneratedValue(strategy = GenerationType.IDENTITY)
-    public Long id;
+    private Long id;
 
-    public String nome;
+    private String nome;
 
-    public String descricao;
+    private String descricao;
 
-    public LocalDateTime prazo;
+    private LocalDateTime prazo;
 
-    @Column(name = "Status")
-    @Convert(converter = StatusEnum.class)
-    public statusEnum status;
+    @Convert(converter = StatusEnumConverter.class)
+    private StatusEnum status;
 
     @ManyToOne(fetch = FetchType.LAZY)
     @JoinColumn(name = "usuario_id")
-    public Usuario usuario;
+    private Usuario usuario;
 
-    @Column(name = "prioridade")
     @Convert(converter = PrioridadeEnumConverter.class)
-    public prioridadeEnum prioridade;
-
-    
+    private PrioridadeEnum prioridade;
 
 }
diff --git a/src/main/java/br/com/felipeTarefas/domain/Usuario.java b/src/main/java/br/com/felipeTarefas/domain/Usuario.java
index 0b78c50..9e799f4 100644
--- a/src/main/java/br/com/felipeTarefas/domain/Usuario.java
+++ b/src/main/java/br/com/felipeTarefas/domain/Usuario.java
@@ -1,5 +1,6 @@
 package br.com.felipeTarefas.domain;
 
+import java.util.ArrayList;
 import java.util.List;
 
 import jakarta.persistence.Entity;
@@ -29,7 +30,7 @@ public class Usuario {
     public String cpf;
 
     @OneToMany(mappedBy = "usuario", fetch = FetchType.LAZY, orphanRemoval = true)
-    private List<Usuario> usuario;
+    private List<Tarefa> tarefas = new ArrayList<>();
 
 
 }
diff --git a/src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOIn.java b/src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOIn.java
new file mode 100644
index 0000000..3cb6142
--- /dev/null
+++ b/src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOIn.java
@@ -0,0 +1,27 @@
+package br.com.felipeTarefas.domain.dtos;
+
+import java.time.LocalDateTime;
+
+import br.com.felipeTarefas.enums.PrioridadeEnum;
+import br.com.felipeTarefas.enums.StatusEnum;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@Getter
+@Setter
+@AllArgsConstructor
+@NoArgsConstructor
+public class TarefaDTOIn {
+
+    private String nome; 
+    private String descricao; 
+    private LocalDateTime prazo; 
+    private StatusEnum status; 
+    private PrioridadeEnum prioridade; 
+    private Long usuarioId; 
+
+
+
+}
diff --git a/src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOOut.java b/src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOOut.java
new file mode 100644
index 0000000..3bb8a21
--- /dev/null
+++ b/src/main/java/br/com/felipeTarefas/domain/dtos/TarefaDTOOut.java
@@ -0,0 +1,37 @@
+package br.com.felipeTarefas.domain.dtos;
+
+import java.time.LocalDateTime;
+
+import br.com.felipeTarefas.domain.Tarefa;
+import br.com.felipeTarefas.enums.PrioridadeEnum;
+import br.com.felipeTarefas.enums.StatusEnum;
+import lombok.AllArgsConstructor;
+import lombok.Getter;
+import lombok.NoArgsConstructor;
+import lombok.Setter;
+
+@AllArgsConstructor
+@NoArgsConstructor
+@Setter
+@Getter
+public class TarefaDTOOut {
+    private Long id; 
+    private String nome;
+    private String descricao; 
+    private LocalDateTime prazo;
+    private StatusEnum status;
+    private PrioridadeEnum prioridade;
+    private Long usuarioId;
+
+    public static TarefaDTOOut toDtoOut(Tarefa tarefa){
+        TarefaDTOOut tarefaDTOOut = new TarefaDTOOut();
+        tarefaDTOOut.setDescricao(tarefa.getDescricao());
+        tarefaDTOOut.setId(tarefa.getId());
+        tarefaDTOOut.setNome(tarefa.getNome());
+        tarefaDTOOut.setPrazo(tarefa.getPrazo());
+        tarefaDTOOut.setPrioridade(tarefa.getPrioridade());
+        tarefaDTOOut.setStatus(tarefa.getStatus());
+        tarefaDTOOut.setUsuarioId(tarefa.getUsuario().getId());
+        return tarefaDTOOut;
+    }
+}
diff --git a/src/main/java/br/com/felipeTarefas/repositories/TarefaRepository.java b/src/main/java/br/com/felipeTarefas/repositories/TarefaRepository.java
index d4b8b99..11f1a58 100644
--- a/src/main/java/br/com/felipeTarefas/repositories/TarefaRepository.java
+++ b/src/main/java/br/com/felipeTarefas/repositories/TarefaRepository.java
@@ -6,11 +6,11 @@ import java.util.Optional;
 import org.springframework.data.jpa.repository.JpaRepository;
 
 import br.com.felipeTarefas.domain.Tarefa;
-import br.com.felipeTarefas.domain.Usuario;
 
 public interface TarefaRepository extends JpaRepository<Tarefa, Long> {
     Optional<Tarefa> findTarefaById(Long id);
-    List<Tarefa> findTarefasByUsuario(Usuario usuario);
+    List<Tarefa> findByUsuarioId(Long usuarioId);
+    
     
     
 }
diff --git a/src/main/java/br/com/felipeTarefas/service/TarefaService.java b/src/main/java/br/com/felipeTarefas/service/TarefaService.java
index bf2986a..0eecca5 100644
--- a/src/main/java/br/com/felipeTarefas/service/TarefaService.java
+++ b/src/main/java/br/com/felipeTarefas/service/TarefaService.java
@@ -3,20 +3,64 @@ package br.com.felipeTarefas.service;
 import java.util.List;
 
 import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
 
+import br.com.felipeTarefas.config.exceptions.UsuarioNaoEncontradoException;
 import br.com.felipeTarefas.domain.Tarefa;
 import br.com.felipeTarefas.domain.Usuario;
+import br.com.felipeTarefas.domain.dtos.TarefaDTOIn;
+import br.com.felipeTarefas.domain.dtos.TarefaDTOOut;
+import br.com.felipeTarefas.enums.PrioridadeEnum;
+import br.com.felipeTarefas.enums.StatusEnum;
 import br.com.felipeTarefas.repositories.TarefaRepository;
+import br.com.felipeTarefas.repositories.UsuarioRepository;
 
+@Service
 public class TarefaService {
-    
+
     @Autowired
     private TarefaRepository tarefaRepository;
 
+    @Autowired
+    private UsuarioRepository usuarioRepository;
 
-    public List<Tarefa> findTarefasByUsuario(Usuario usuario){
-        return tarefaRepository.findTarefasByUsuario(usuario);
+    public List<Tarefa> findByUsuarioId(Usuario usuario) {
+        if (usuario.getId() == null) {
+            throw new UsuarioNaoEncontradoException(usuario.getId());
+        }
+        return tarefaRepository.findByUsuarioId(usuario.getId());
     }
 
+    
+    public TarefaDTOOut criarTarefa(TarefaDTOIn tarefaDTOIn) {
+        Usuario usuario = usuarioRepository.findById(tarefaDTOIn.getUsuarioId())
+                .orElseThrow(() -> new UsuarioNaoEncontradoException(tarefaDTOIn.getUsuarioId()));
+
+        Tarefa newTarefa = new Tarefa();
+        newTarefa.setDescricao(tarefaDTOIn.getDescricao());
+        newTarefa.setNome(tarefaDTOIn.getNome());
+        newTarefa.setPrazo(tarefaDTOIn.getPrazo());
+        newTarefa.setPrioridade(tarefaDTOIn.getPrioridade() != null ? 
+                                tarefaDTOIn.getPrioridade() : PrioridadeEnum.UM);
+        newTarefa.setStatus(tarefaDTOIn.getStatus() != null ? 
+                                tarefaDTOIn.getStatus() : StatusEnum.PENDENTE);
+        newTarefa.setUsuario(usuario);
+
+        Tarefa tarefaSalva = tarefaRepository.save(newTarefa);
+
+        return TarefaDTOOut.toDtoOut(tarefaSalva);
+    }
+
+    public List<TarefaDTOOut> listarTarefas(){
+        List<Tarefa> tarefas = tarefaRepository.findAll();
+        return tarefas.stream()
+                        .map(TarefaDTOOut::toDtoOut)
+                        .toList();
+
+    }
+
+
+
+
 
 }
diff --git a/src/main/java/br/com/felipeTarefas/service/UsuarioService.java b/src/main/java/br/com/felipeTarefas/service/UsuarioService.java
index 7706f3c..502f9f7 100644
--- a/src/main/java/br/com/felipeTarefas/service/UsuarioService.java
+++ b/src/main/java/br/com/felipeTarefas/service/UsuarioService.java
@@ -8,7 +8,7 @@ import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Service;
 
-import br.com.felipeTarefas.config.exceptions.UsuarioNãoEncontradoException;
+import br.com.felipeTarefas.config.exceptions.UsuarioNaoEncontradoException;
 import br.com.felipeTarefas.domain.Usuario;
 import br.com.felipeTarefas.domain.dtos.UsuarioDTOin;
 import br.com.felipeTarefas.domain.dtos.UsuarioDTOout;
@@ -40,7 +40,7 @@ public class UsuarioService extends Exception {
 
     public UsuarioDTOout updateUsuario(Long id, UsuarioDTOin usuarioDTOin) {
         Usuario usuario = usuarioRepository.findById(id)
-                .orElseThrow(() -> new UsuarioNãoEncontradoException(id));
+                .orElseThrow(() -> new UsuarioNaoEncontradoException(id));
 
         if (usuarioDTOin.getUsername() != null) {
             usuario.setUsername(usuarioDTOin.getUsername());
@@ -59,7 +59,7 @@ public class UsuarioService extends Exception {
     public ResponseEntity<Void> deleteUsuario(Long id) {
         Optional<Usuario> usuario = usuarioRepository.findById(id);
         if (usuario.isEmpty()) {
-            throw new UsuarioNãoEncontradoException(id);
+            throw new UsuarioNaoEncontradoException(id);
         } else {
             usuarioRepository.deleteById(id);
             return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
@@ -69,9 +69,11 @@ public class UsuarioService extends Exception {
     public Optional<Usuario> findById(Long id) {
         Optional<Usuario> usuario = usuarioRepository.findById(id);
         if (usuario.isEmpty()) {
-            throw new UsuarioNãoEncontradoException(id);
+            throw new UsuarioNaoEncontradoException(id);
         } else
             return usuario;
     }
 
+    
+
 }
-- 
2.48.1.windows.1

